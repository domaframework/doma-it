apply plugin: 'eclipse'

eclipse {
    classpath {
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { it.kind == "con" }
            }
            withXml { provider ->
                def node = provider.asNode()
                node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'])
                node.appendNode( 'classpathentry', [ kind: 'src', output: 'bin/main', path: '.apt_generated'])
            }
        }
    }
    jdt {
        file {
            withProperties {properties ->
                properties.setProperty('org.eclipse.jdt.core.compiler.processAnnotations', 'enabled')
            }
        }
    }
}

eclipseJdt {
    doLast { 
        file('.factorypath').withWriter { writer ->
            def domaJar = configurations.annotationProcessor.find {
                it.name.startsWith('doma-2')
            }
            new groovy.xml.MarkupBuilder(writer).factorypath() {
                factorypathentry(kind:'EXTJAR', id:domaJar, enabled:true, runInBatchMode:false)
            }
        }
        mkdir('.apt_generated')
    }
}
