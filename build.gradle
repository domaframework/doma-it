plugins {
    id 'java'
    id 'com.diffplug.eclipse.apt' version '3.22.0'
    id 'com.diffplug.gradle.spotless' version '3.27.2'
    id "net.researchgate.release" version '2.8.1'
    id 'org.seasar.doma.compile' version '1.1.0'
}

def domaVersion = project.findProperty('domaVersion') ?: "2.+"

spotless {
    java {
        googleJavaFormat('1.7')
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Adoma.domain.converters=org.seasar.doma.it.domain.DomainConverterProvider']
}

compileTestJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-proc:none"]
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Doma-IT', 'Implementation-Version': archiveVersion
    }
}

test {
    systemProperty 'url', jdbcUrl
    systemProperty 'user', jdbcUser
    systemProperty 'password', jdbcPassword
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {url 'https://oss.sonatype.org/content/repositories/snapshots/'}
}

dependencies {
    annotationProcessor "org.seasar.doma:doma-processor:${domaVersion}"
    implementation "org.seasar.doma:doma-core:${domaVersion}"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
    testRuntimeOnly 'com.h2database:h2:1.4.200'
    testRuntimeOnly 'mysql:mysql-connector-java:5.1.29'
    testRuntimeOnly 'org.postgresql:postgresql:42.2.14'
}

release {
    newVersionCommitMessage = '[Gradle Release Plugin] - [skip ci] new version commit: '
}

eclipse {
    classpath {
        file {
            whenMerged { classpath ->
                classpath.entries.removeAll { it.path == '.apt_generated' }
            }
            withXml { provider ->
                def node = provider.asNode()
                node.appendNode( 'classpathentry', [ kind: 'src', output: 'bin/main', path: '.apt_generated'])
            }
        }
    }
    jdt {
        javaRuntimeName = 'JavaSE-1.8'
    }
}
