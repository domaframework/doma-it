name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    name: JDK ${{ matrix.java }}
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java: [ 8, 11, 14, 15-ea ]

    services:
      postgres:
        image: postgres:10.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: doma_it
        ports:
          - 127.0.0.1:5432:5432
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: doma_it
        ports:
          - 3306

    steps:
      - name: Start the MySQL service
        run: |
          sudo /etc/init.d/mysql start
          mysql -uroot -h127.0.0.1 -proot -e 'create database doma_it;'

      - name: MS-SQL Service
        run: |
          docker run --rm --publish 1433:1433 --name build-mssql \
            -e ACCEPT_EULA=Y -e SA_PASSWORD=ActuallyRequired11Complexity \
            -d microsoft/mssql-server-linux:2017-CU13

      - name: Checkout (doma)
        uses: actions/checkout@v2
        with:
          repository: domaframework/doma
          path: doma
          ref: ${{ github.event.inputs.ref }}

      - name: Set up JDK (doma)
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Grant execute permission for gradlew (doma)
        working-directory: ./doma
        run: chmod +x gradlew

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle.kts', '**/gradle.properties') }}

      - name: Build and Install (doma)
        working-directory: ./doma
        run: ./gradlew assemble publishToMavenLocal

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: doma-it

      - name: Grant execute permission for gradlew
        working-directory: ./doma-it
        run: chmod +x gradlew

      - name: Check code format
        working-directory: ./doma-it
        run: ./gradlew spotlessCheck

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Build
        working-directory: ./doma-it
        run: |
          ./gradlew -v
          ./gradlew assemble

      - name: Test with h2
        working-directory: ./doma-it
        run: ./gradlew check -x spotlessCheck
        env:
          ORG_GRADLE_PROJECT_jdbcUrl: ''
          ORG_GRADLE_PROJECT_jdbcUser: ''
          ORG_GRADLE_PROJECT_jdbcPassword: ''

      - name: Test with postgres
        working-directory: ./doma-it
        run: ./gradlew check -x spotlessCheck
        env:
          ORG_GRADLE_PROJECT_jdbcUrl: jdbc:postgresql://127.0.0.1/doma_it
          ORG_GRADLE_PROJECT_jdbcUser: postgres
          ORG_GRADLE_PROJECT_jdbcPassword: postgres

      - name: Test with mysql
        working-directory: ./doma-it
        run: ./gradlew check -x spotlessCheck
        env:
          ORG_GRADLE_PROJECT_jdbcUrl: jdbc:mysql://127.0.0.1/doma_it
          ORG_GRADLE_PROJECT_jdbcUser: root
          ORG_GRADLE_PROJECT_jdbcPassword: root

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: jdk${{ matrix.java }}
          path: ./doma-it/build/reports
