name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  setup:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: domaframework/doma

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set version
        id: set-version
        run: ./gradlew properties | grep "^version:" | awk '{print $2}' | { read v; echo "::set-output name=version::$v"; }

      - name: Print version
        run: echo ${{ steps.set-version.outputs.version }}
        
      - name: Build and Install
        run: ./gradlew assemble publishToMavenLocal

      - name: Tar Maven Repository
        shell: bash
        run: tar -czf maven-repository.tgz -C ~ .m2/repository

      - name: Persist Maven Repository
        uses: actions/upload-artifact@v2
        with:
          name: maven-repository
          path: maven-repository.tgz

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: setup
          path: ./**/build/reports

  check:
    if: contains(github.event.head_commit.message, '[skip ci]') == false
    name: Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Check code format (common, java, kotlin)
        run: ./gradlew spotlessCheck

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Check code format (jep)
        run: ./gradlew :jep:spotlessCheck -PenableAdditionalFeatures=true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: check
          path: ./**/build/reports

  test:
    runs-on: ubuntu-latest
    needs: [ setup, check ]
    strategy:
      matrix:
        java: [8, 11, 17]
        driver: [h2, mysql, postgresql, sqlserver]
    timeout-minutes: 10

    steps:
      - name: Download Maven Repository
        uses: actions/download-artifact@v2
        with:
          name: maven-repository
          path: .

      - name: Extract Maven Repository
        shell: bash
        run: tar -xzf maven-repository.tgz -C ~

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test (java)
        run: ./gradlew java:${{ matrix.driver }} -PdomaVersion=${{ needs.setup.outputs.version }}

      - name: Test (kotlin)
        run: ./gradlew kotlin:${{ matrix.driver }} -PdomaVersion=${{ needs.setup.outputs.version }}

      - name: Test (additional features)
        if: matrix.java == '17'
        run: ./gradlew jep:${{ matrix.driver }} -PdomaVersion=${{ needs.setup.outputs.version }} -PenableAdditionalFeatures=true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: {{ matrix.java }}-${{ matrix.driver }}
          path: ./**/build/reports
